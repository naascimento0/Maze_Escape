hash_table_construct: HashTable *hash_tbl = malloc(sizeof(HashTable));
hash_table_construct: hash_tbl->buckets = calloc(table_size, sizeof(ForwardList*));
heap_construct: Heap *heap = malloc(sizeof(Heap));
heap_construct: heap->nodes = calloc(INITIAL_CAPACITY, sizeof(HeapNode*));

Celula *c = malloc(sizeof(Celula)); FREE
heap_push: HeapNode *heap_node = malloc(sizeof(HeapNode)); FREE
heap_push: heap_type *aux = malloc(sizeof(int));
forward_list_construct: malloc(sizeof(ForwardList));
hash_table_set: HashTableItem *new_pair = malloc(sizeof(HashTableItem)); FREE
node_construct: Node *node = malloc(sizeof(Node)); FREE

Celula *c = malloc(sizeof(Celula));
heap_push: HeapNode *heap_node = malloc(sizeof(HeapNode)); FREE
heap_push: heap_type *aux = malloc(sizeof(int)); FREE
forward_list_construct: malloc(sizeof(ForwardList));
hash_table_set: HashTableItem *new_pair = malloc(sizeof(HashTableItem)); FREE
node_construct: Node *node = malloc(sizeof(Node)); FREE

hash_table_set: HashTableItem *new_pair = malloc(sizeof(HashTableItem)); FREE
